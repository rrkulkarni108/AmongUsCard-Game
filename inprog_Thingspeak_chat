classdef thingspeak_tester < matlab.apps.AppBase

    % Properties that correspond to app components
    properties (Access = public)
        UIFigure            matlab.ui.Figure
        SendchatButton      matlab.ui.control.Button
        Player1ChatLabel    matlab.ui.control.Label
        Player2ChatLabel    matlab.ui.control.Label
        WhoplaysfirstPanel  matlab.ui.container.Panel
        Player1Button       matlab.ui.control.Button
        Player2Button       matlab.ui.control.Button
    end

    
    properties (Access = private)
        myPlayerNum % Description
        otherPlayerNum
        deck
        channelID
        writeKey
        readKey
        readDelay
        writeDelay
        answer
        otherString
        mysendString
        dataTable
    end
    
    methods (Access = private)
        
        function [] = ClearThingSpeakChannel(app)
            thingSpeakWrite(app.channelID, 'Fields', 1, 'Values', "0", 'WriteKey', app.writeKey);
        end
    end
    

    % Callbacks that handle component events
    methods (Access = private)

        % Code that executes after component creation
        function startupFcn(app)
            app.myPlayerNum = 1;
            app.otherPlayerNum = 2;
            app.deck = "";
            set(app.SendchatButton, 'Enable', 'off');
            
            
             % ASSIGN THE ID OF YOUR OWN CHANNEL HERE
            app.channelID = 1247940;
            
             % ASSIGN THE WRITE API KEY OF YOUR OWN CHANNEL HERE
            app.writeKey = 'EYDVQ60GG0L604FU';
            
             % ASSIGN THE READ API KEY OF YOUR OWN CHANNEL HERE
            app.readKey = 'S4GIV0DNOL2ZX6Z3';
            
            app.readDelay = 5;
            app.writeDelay = 1;
            app.ClearThingSpeakChannel();
        end

        % Callback function
        function sendDeckButtonPushed(app, event)
            taskDeck = 1;
        end

        % Button pushed function: SendchatButton
        function SendchatButtonPushed(app, event)
            prompt = {'Type a short message:'};
            dlgtitle = 'Emergency Meeting';
            dims = [1 75];
            definput = {'Type Here'};
            app.answer = inputdlg(prompt,dlgtitle,dims,definput);
            app.answer = string(app.answer);
            if(app.myPlayerNum == 1)
                
                app.Player1ChatLabel.Text = app.answer;
                app.myPlayerNum = 2;
                set(app.SendchatButton, 'Enable', 'off');
                
            else
                app.Player2ChatLabel.Text = app.answer;
                app.myPlayerNum = 1;
                set(app.SendchatButton, 'Enable', 'off');
            end
            %thingSpeakRead(app.channelID,"Fields",2,"ReadKey",app.readKey)
            %pause(app.writeDelay);
            %thingSpeakWrite(app.channelID, "Fields",2,"Values","", "WriteKey" ,app.writeKey)
            
            %app.dataTable = thingSpeakRead(app.channelID,"Fields",1,"ReadKey",app.readKey, 'OutputFormat',"table")
            %dataString= string(app.dataTable.dataString(1));
            %disp("This is" + " " + dataString)
      
            pause(app.writeDelay);
            
            thingSpeakWrite(app.channelID, "Fields",2,"Values",app.answer,"WriteKey",app.writeKey);
            pause(app.writeDelay);
            disp(app.answer);
            %disp(class(app.answer));
            
            
            pause(app.readDelay);
            app.dataTable = thingSpeakRead(app.channelID,"Fields",2,"ReadKey",app.readKey, 'OutputFormat',"table")
            disp(app.dataTable);
            dataString= string(app.dataTable.chatMessage(1));
            disp("This is" + " " + dataString)
            thingSpeakWrite(app.channelID,"Fields",2,"Values", dataString, 'WriteKey', app.writeKey)
            
        end

        % Button pushed function: Player1Button
        function Player1ButtonPushed(app, event)
            set(app.Player1Button, 'Enable', 'off');
            set(app.Player2Button, 'Enable', 'off');
            set(app.SendchatButton, 'Enable', 'on');
            
            app.myPlayerNum = 1;
            app.Player1ChatLabel.Position = [420,84,195,103];
            app.Player1ChatLabel.HorizontalAlignment = 'right';
            app.Player1ChatLabel.VerticalAlignment = 'bottom';
            app.Player2ChatLabel.Position = [420,186,195,111];
            app.Player2ChatLabel.HorizontalAlignment = 'left';
            app.Player2ChatLabel.VerticalAlignment = 'top';
           
        end

        % Button pushed function: Player2Button
        function Player2ButtonPushed(app, event)
            set(app.Player1Button, 'Enable', 'off');
            set(app.Player2Button, 'Enable', 'off');
            set(app.SendchatButton, 'Enable', 'on');
            
            app.myPlayerNum = 2;
            app.Player2ChatLabel.Position = [420,84,195,103];
            app.Player2ChatLabel.HorizontalAlignment = 'right'
            app.Player1ChatLabel.Position = [420,186,195,111];
            app.Player1ChatLabel.HorizontalAlignment = 'left'
        end
    end

    % Component initialization
    methods (Access = private)

        % Create UIFigure and components
        function createComponents(app)

            % Create UIFigure and hide until all components are created
            app.UIFigure = uifigure('Visible', 'off');
            app.UIFigure.Position = [100 100 640 480];
            app.UIFigure.Name = 'MATLAB App';

            % Create SendchatButton
            app.SendchatButton = uibutton(app.UIFigure, 'push');
            app.SendchatButton.ButtonPushedFcn = createCallbackFcn(app, @SendchatButtonPushed, true);
            app.SendchatButton.Position = [289 124 100 22];
            app.SendchatButton.Text = 'Send chat';

            % Create Player1ChatLabel
            app.Player1ChatLabel = uilabel(app.UIFigure);
            app.Player1ChatLabel.HorizontalAlignment = 'center';
            app.Player1ChatLabel.VerticalAlignment = 'top';
            app.Player1ChatLabel.Position = [397 132 217 34];
            app.Player1ChatLabel.Text = 'Player 1 Chat';

            % Create Player2ChatLabel
            app.Player2ChatLabel = uilabel(app.UIFigure);
            app.Player2ChatLabel.HorizontalAlignment = 'center';
            app.Player2ChatLabel.VerticalAlignment = 'bottom';
            app.Player2ChatLabel.Position = [465 51 233 35];
            app.Player2ChatLabel.Text = 'Player 2 Chat';

            % Create WhoplaysfirstPanel
            app.WhoplaysfirstPanel = uipanel(app.UIFigure);
            app.WhoplaysfirstPanel.Title = 'Who plays first?';
            app.WhoplaysfirstPanel.Position = [12 156 199 141];

            % Create Player1Button
            app.Player1Button = uibutton(app.WhoplaysfirstPanel, 'push');
            app.Player1Button.ButtonPushedFcn = createCallbackFcn(app, @Player1ButtonPushed, true);
            app.Player1Button.Position = [50 74 100 22];
            app.Player1Button.Text = 'Player 1';

            % Create Player2Button
            app.Player2Button = uibutton(app.WhoplaysfirstPanel, 'push');
            app.Player2Button.ButtonPushedFcn = createCallbackFcn(app, @Player2ButtonPushed, true);
            app.Player2Button.Position = [50 45 100 22];
            app.Player2Button.Text = 'Player 2';

            % Show the figure after all components are created
            app.UIFigure.Visible = 'on';
        end
    end

    % App creation and deletion
    methods (Access = public)

        % Construct app
        function app = thingspeak_tester

            % Create UIFigure and components
            createComponents(app)

            % Register the app with App Designer
            registerApp(app, app.UIFigure)

            % Execute the startup function
            runStartupFcn(app, @startupFcn)

            if nargout == 0
                clear app
            end
        end

        % Code that executes before app deletion
        function delete(app)

            % Delete UIFigure when app is deleted
            delete(app.UIFigure)
        end
    end
end
